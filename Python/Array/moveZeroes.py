# -*- coding:utf-8 -*-
# 283. 移动零
# 1. 使用一轮循环，将0元素作为下标记录下来，循环中遇到非0元素就和0元素下标交换，这样前面所有的数都是
#     非零元素
# 2. 使用两个指针，一个查找0元素，一个查找0后的非0元素, 
#     找到相关元素后直接交换，这样既保证了在原数组上操作，也能减少操作次数;
#     非0元素查找到后，找0元素的指针找到一个0元素就开始交换；然后找下一个非0
#     元素，一次完成全部交换
# 3. copy一个数组，然后一次循环添加，这个方案被禁止了
# 4. 使用字符串转化为数组的方式，将所有非0的元素以逗号分隔连成一个字符串
#     最后以逗号分隔转化为数组
# 5. 使用两轮循环，第一轮解决非0元素，第二轮把剩下的长度都补齐为0元素
class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        length = len(nums)
        if length <= 0:
            return
        cnt = 0
        for i in range(length):
            if nums[i] != 0:
                nums[cnt] = nums[i]
                if i > cnt:
                    nums[i] = 0
                cnt += 1

        print(nums)


if __name__ == "__main__":
    obj = Solution()
    obj.moveZeroes([-959151711, 623836953, 209446690, -1950418142, 1339915067, -733626417, 481171539, -2125997010, -1225423476, 1462109565, 147434687, -1800073781, -1431212205, -450443973, 50097298, 753533734, -747189404, -2070885638, 0, -1484353894, -340296594, -2133744570, 619639811, -1626162038, 669689561, 0, 112220218, 502447212, -787793179, 0, -726846372, -1611013491, 204107194, 1605165582, -566891128, 2082852116, 0, 532995238, -1502590712, 0, 2136989777, -2031153343, 371398938, -1907397429, 342796391, 609166045, -2007448660, -1096076344, -323570318, 0, -
                    2082980371, 2129956379, -243553361, -1549960929, 1502383415, 0, -1394618779, 694799815, 78595689, -1439173023, -1416578800, 685225786, -333502212, -1181308536, -380569313, 772035354, 0, -915266376, 663709718, 1443496021, -777017729, -883300731, -387828385, 1907473488, -725483724, -972961871, -1255712537, 383120918, 1383877998, 1722751914, 0, -1156050682, 1952527902, -560244497, 1304305692, 1173974542, -1313227247, -201476579, -298899493, -1828496581, -1724396350, 1933643204, 1531804925, 1728655262, -955565449, 0, -69843702, -461760848, 268336768, 1446130876])
